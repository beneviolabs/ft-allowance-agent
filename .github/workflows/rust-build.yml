name: rust-build

on:
  workflow_dispatch:
  push:
    paths:
      - '**/*.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
  pull_request:
    branches: [ main, develop ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: contracts
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev pkg-config binaryen

      # Use stable for testing/formatting
      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Install wasm32 target
        run: rustup target add wasm32-unknown-unknown

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          working-directory: contracts

      - name: Check formatting
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy -- -D warnings

      # Build contracts first for integration tests
      - name: Install Rust (nightly) for building
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: wasm32-unknown-unknown
          components: rustfmt

      - name: Install cargo-near
        run: cargo install cargo-near --version 0.15.0 --locked

      - name: Build Contracts
        run: |
          rustup component add rust-src
          chmod +x build_auth_proxy.sh
          ./build_auth_proxy.sh
          cd factory
          RUSTFLAGS="-Z unstable-options" cargo +nightly near build non-reproducible-wasm --no-abi

      - name: Run tests
        run: ./test.sh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: contract-wasm
          path: |
            contracts/target/near/proxy_contract.wasm
            contracts/factory/target/near/proxy_factory.wasm

      - name: Security audit
        run: cargo audit

      - name: Dependency vulnerability scan
        uses: actions/dependency-review-action@v4
        if: github.event_name == 'pull_request'

      - name: Contract size check
        run: |
          MAX_SIZE=4194304  # 4MB NEAR limit
          SIZE=$(stat -c%s target/near/proxy_contract.wasm)
          if [ $SIZE -gt $MAX_SIZE ]; then
            echo "Contract size $SIZE exceeds NEAR limit $MAX_SIZE"
            exit 1
          fi
